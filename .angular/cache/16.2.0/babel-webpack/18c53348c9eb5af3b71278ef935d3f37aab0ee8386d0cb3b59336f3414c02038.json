{"ast":null,"code":"var _class;\nimport { EMPTY } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FlightService {\n  constructor(http) {\n    this.http = http;\n    this.flightList = [];\n  }\n  findById(id) {\n    const url = `http://www.angular.at/api/flight/${id}`;\n    const params = {\n      'id': id\n    };\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n    return this.http.get(url, {\n      params,\n      headers\n    });\n  }\n  load(filter) {\n    this.find(filter).subscribe(result => {\n      this.flightList = result;\n    }, err => {\n      console.error('error loading', err);\n    });\n  }\n  find(filter) {\n    const url = `http://www.angular.at/api/flight`;\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n    const params = {\n      'from': filter.from,\n      'to': filter.to\n    };\n    return this.http.get(url, {\n      params,\n      headers\n    });\n  }\n  save(entity) {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put(url, entity, {\n        headers,\n        params\n      });\n    } else {\n      url = `http://www.angular.at/api/flight`;\n      return this.http.post(url, entity, {\n        headers,\n        params\n      });\n    }\n  }\n  delete(entity) {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete(url, {\n        headers,\n        params\n      });\n    }\n    return EMPTY;\n  }\n}\n_class = FlightService;\n_class.ɵfac = function FlightService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["EMPTY","HttpHeaders","HttpParams","FlightService","constructor","http","flightList","findById","id","url","params","headers","set","get","load","filter","find","subscribe","result","err","console","error","from","to","save","entity","toString","put","post","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["/mnt/c/Users/1030598961/Documents/nodeExercises/angular-crud/demo/src/app/flight/flight.service.ts"],"sourcesContent":["import { Flight } from './flight';\nimport { FlightFilter } from './flight-filter';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class FlightService {\n  flightList: Flight[] = [];\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<Flight> {\n    const url = `http://www.angular.at/api/flight/${id}`;\n    const params = { 'id': id };\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n    return this.http.get<Flight>(url, {params, headers});\n  }\n\n  load(filter: FlightFilter): void {\n    this.find(filter).subscribe(result => {\n        this.flightList = result;\n      },\n      err => {\n        console.error('error loading', err);\n      }\n    );\n  }\n\n  find(filter: FlightFilter): Observable<Flight[]> {\n    const url = `http://www.angular.at/api/flight`;\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n\n    const params = {\n      'from': filter.from,\n      'to': filter.to,\n    };\n\n    return this.http.get<Flight[]>(url, {params, headers});\n  }\n\n  save(entity: Flight): Observable<Flight> {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put<Flight>(url, entity, {headers, params});\n    } else {\n      url = `http://www.angular.at/api/flight`;\n      return this.http.post<Flight>(url, entity, {headers, params});\n    }\n  }\n\n  delete(entity: Flight): Observable<Flight> {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete<Flight>(url, {headers, params});\n    }\n    return EMPTY;\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}