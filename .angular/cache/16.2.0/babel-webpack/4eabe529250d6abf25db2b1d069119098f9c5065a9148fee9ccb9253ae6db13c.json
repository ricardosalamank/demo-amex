{"ast":null,"code":"import { EMPTY } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FlightService = /*#__PURE__*/(() => {\n  var _class;\n  class FlightService {\n    constructor(http) {\n      this.http = http;\n      this.flightList = [];\n    }\n    findById(id) {\n      const url = `http://www.angular.at/api/flight/${id}`;\n      const params = {\n        'id': id\n      };\n      const headers = new HttpHeaders().set('Accept', 'application/json');\n      return this.http.get(url, {\n        params,\n        headers\n      });\n    }\n    load(filter) {\n      this.find(filter).subscribe(result => {\n        this.flightList = result;\n      }, err => {\n        console.error('error loading', err);\n      });\n    }\n    find(filter) {\n      const url = `http://www.angular.at/api/flight`;\n      const headers = new HttpHeaders().set('Accept', 'application/json');\n      const params = {\n        'from': filter.from,\n        'to': filter.to\n      };\n      return this.http.get(url, {\n        params,\n        headers\n      });\n    }\n    save(entity) {\n      let params = new HttpParams();\n      let url = '';\n      const headers = new HttpHeaders().set('content-type', 'application/json');\n      if (entity.id) {\n        url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n        params = new HttpParams().set('ID', entity.id.toString());\n        return this.http.put(url, entity, {\n          headers,\n          params\n        });\n      } else {\n        url = `http://www.angular.at/api/flight`;\n        return this.http.post(url, entity, {\n          headers,\n          params\n        });\n      }\n    }\n    delete(entity) {\n      let params = new HttpParams();\n      let url = '';\n      const headers = new HttpHeaders().set('content-type', 'application/json');\n      if (entity.id) {\n        url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n        params = new HttpParams().set('ID', entity.id.toString());\n        return this.http.delete(url, {\n          headers,\n          params\n        });\n      }\n      return EMPTY;\n    }\n  }\n  _class = FlightService;\n  _class.ɵfac = function FlightService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return FlightService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}