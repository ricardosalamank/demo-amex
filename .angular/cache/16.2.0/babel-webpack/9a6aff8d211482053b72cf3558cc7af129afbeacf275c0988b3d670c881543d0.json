{"ast":null,"code":"import { EMPTY } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst headers = new HttpHeaders().set('Accept', 'application/json');\nexport let PackageAmexService = /*#__PURE__*/(() => {\n  var _class;\n  class PackageAmexService {\n    constructor(http) {\n      this.http = http;\n      this.packageAmexList = [];\n      this.api = 'https://american-export-crud-dk7m-dev.fl0.io/api/package';\n    }\n    findById(id) {\n      const url = `${this.api}/id/${id}`;\n      // const params = { id: id };\n      return this.http.get(url, {\n        headers\n      });\n    }\n    load(filter) {\n      this.find(filter).subscribe({\n        next: result => {\n          this.packageAmexList = result.response_body.data;\n        },\n        error: err => {\n          console.error('error loading', err);\n        }\n      });\n    }\n    find(filter) {\n      const params = {};\n      return this.http.get(this.api, {\n        params,\n        headers\n      });\n    }\n    save(entity) {\n      let params = new HttpParams();\n      let url = '';\n      if (entity.id) {\n        url = `${this.api}/update`;\n        // params = new HttpParams().set('ID', entity.id.toString());\n        return this.http.put(url, entity, {\n          headers\n        });\n      } else {\n        url = `${this.api}`;\n        console.log(\"llego post :\" + entity);\n        entity.id = 0;\n        entity.created_date = new Date();\n        entity.modified_date = new Date();\n        entity.created_by = \"RIC\";\n        entity.modified_by = \"Golasas\";\n        entity.height = \"50\";\n        return this.http.post(url, entity, {\n          headers,\n          params\n        });\n      }\n    }\n    delete(entity) {\n      let params = new HttpParams();\n      let url = '';\n      if (entity.id) {\n        url = `${this.api}/del/${entity.id.toString()}`;\n        // params = new HttpParams().set('ID', entity.id.toString());\n        return this.http.delete(url, {\n          headers\n        });\n      }\n      return EMPTY;\n    }\n  }\n  _class = PackageAmexService;\n  _class.ɵfac = function PackageAmexService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return PackageAmexService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}