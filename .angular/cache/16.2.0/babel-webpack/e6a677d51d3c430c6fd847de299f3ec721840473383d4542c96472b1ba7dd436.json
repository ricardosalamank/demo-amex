{"ast":null,"code":"var _class;\nimport { EMPTY } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst headers = new HttpHeaders().set('Accept', 'application/json');\nexport class PackageAmexService {\n  constructor(http) {\n    this.http = http;\n    this.packageAmexList = [];\n    this.api = 'https://c7df-130-250-229-20.ngrok.io/api/package';\n  }\n  findById(id) {\n    const url = `${this.api}/${id}`;\n    const params = {\n      id: id\n    };\n    return this.http.get(url, {\n      params,\n      headers\n    });\n  }\n  load(filter) {\n    this.find(filter).subscribe({\n      next: result => {\n        this.packageAmexList = result.content;\n      },\n      error: err => {\n        console.error('error loading', err);\n      }\n    });\n  }\n  find(filter) {\n    const params = {\n      'customer': filter.customer\n    };\n    return this.http.get(this.api, {\n      params,\n      headers\n    });\n  }\n  save(entity) {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put(url, entity, {\n        headers,\n        params\n      });\n    } else {\n      url = `${this.api}`;\n      console.log(\"llego post :\" + params);\n      return this.http.post(url, entity, {\n        headers,\n        params\n      });\n    }\n  }\n  delete(entity) {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete(url, {\n        headers,\n        params\n      });\n    }\n    return EMPTY;\n  }\n}\n_class = PackageAmexService;\n_class.ɵfac = function PackageAmexService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["EMPTY","HttpHeaders","HttpParams","headers","set","PackageAmexService","constructor","http","packageAmexList","api","findById","id","url","params","get","load","filter","find","subscribe","next","result","content","error","err","console","customer","save","entity","toString","put","log","post","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["/mnt/c/Users/1030598961/Documents/nodeExercises/angular-crud/demo/src/app/package-amex/package-amex.service.ts"],"sourcesContent":["import { PackageAmex, PackageAmexClass } from './package-amex';\nimport { PackageAmexFilter } from './package-amex-filter';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n\n@Injectable()\nexport class PackageAmexService {\n  packageAmexList: PackageAmexClass[] = [];\n  api = 'https://c7df-130-250-229-20.ngrok.io/api/package';\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<PackageAmexClass> {\n    const url = `${this.api}/${id}`;\n    const params = { id: id };\n    return this.http.get<PackageAmexClass>(url, {params, headers});\n  }\n\n  load(filter: PackageAmexFilter): void {\n    this.find(filter).subscribe({\n      next: result => {\n        this.packageAmexList = result.content;\n      },\n      error: err => {\n        console.error('error loading', err);\n      }\n    });\n  }\n\n  find(filter: PackageAmexFilter): Observable<PackageAmex> {\n    const params = {\n      'customer': filter.customer,\n    };\n\n    return this.http.get<PackageAmex>(this.api, {params, headers});\n  }\n\n  save(entity: PackageAmexClass): Observable<PackageAmexClass> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put<PackageAmexClass>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      console.log(\"llego post :\"+ params);\n      return this.http.post<PackageAmexClass>(url, entity, {headers, params});\n    }\n  }\n\n  delete(entity: PackageAmexClass): Observable<PackageAmexClass> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete<PackageAmexClass>(url, {headers, params});\n    }\n    return EMPTY;\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}